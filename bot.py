
import json
import os
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

# –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏
ADVISORS_PATH = "./advisors"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö –°–æ–≤–µ—Ç–Ω–∏–∫–æ–≤
def load_specialists():
    specialists = {}
    for filename in os.listdir(ADVISORS_PATH):
        if filename.endswith(".json"):
            with open(os.path.join(ADVISORS_PATH, filename), "r", encoding="utf-8") as f:
                data = json.load(f)
                key = data.get("name", "").upper()
                specialists[key] = data
    return specialists

specialists = load_specialists()
user_states = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[s] for s in sorted(specialists.keys())]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text("üåü –í—ã–±–µ—Ä–∏ –°–æ–≤–µ—Ç–Ω–∏–∫–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è: üåü", reply_markup=reply_markup)

async def info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.chat_id
    current = user_states.get(user_id)
    if current and current in specialists:
        welcome = specialists[current].get("welcome", "–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.")
        await update.message.reply_text(f"üìú –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –°–æ–≤–µ—Ç–Ω–∏–∫–∞ {current}:{welcome}")
    else:
        await update.message.reply_text("‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –°–æ–≤–µ—Ç–Ω–∏–∫–∞ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /start.")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.chat_id
    text = update.message.text.upper()

    if text in specialists:
        previous = user_states.get(user_id)
        user_states[user_id] = text

        if text != previous:
            welcome = specialists[text].get("welcome", "–†–∞–¥ –≤—Å—Ç—Ä–µ—á–µ!")
            await update.message.reply_text(f"üìú {welcome}")

        await update.message.reply_text(f"üëã –¢–µ–ø–µ—Ä—å —Ç—ã –æ–±—â–∞–µ—à—å—Å—è —Å –°–æ–≤–µ—Ç–Ω–∏–∫–æ–º: {text}")
    else:
        await update.message.reply_text("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –°–æ–≤–µ—Ç–Ω–∏–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ —á–µ—Ä–µ–∑ /start.")

def main():
    app = ApplicationBuilder().token("YOUR_TELEGRAM_BOT_TOKEN").build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("info", info))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    app.run_polling()

if __name__ == "__main__":
    main()
